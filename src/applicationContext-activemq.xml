<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.5.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd" 
	>
	<context:property-placeholder location="classpath:database_conn.properties"/> 
<!--
	    使用spring的listenerContainer，消息用持久化保存，服务器重启不会丢失 oracle -->
	   <bean id="datasource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"> 
      <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/> 
      <property name="url">
      <value>${url}</value>
      </property>
      <property name="username" value="javaee"/> 
      <property name="password" value="javaee"/> 
      <property name="maxActive" value="200"/> 
      <property name="poolPreparedStatements" value="true"/> 
    </bean> 
     
     <!-- 
  <bean id="datasource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"> 
      <property name="driverClassName" value="com.mysql.jdbc.Driver"/> 
      <property name="url" value="jdbc:mysql://localhost:3306/shopxx?useUnicode=true&characterEncoding=UTF-8" />
      <property name="username" value="root"/> 
      <property name="password" value="root"/> 
      <property name="maxActive" value="200"/> 
      <property name="poolPreparedStatements" value="true"/> 
    </bean> 
     -->
	<!--    
  <bean id="broker"
        class="org.apache.activemq.xbean.BrokerFactoryBean">
        <property name="config"
            value="classpath:activemq.xml" />
        <property name="start"
            value="true" />
    </bean>
    -->

	  <!-- 连接外部的activeMQ
	<amq:connectionFactory id="jmsConnectionFactory" brokerURL="tcp://localhost:61616?wireFormat.maxInactivityDuration=0" />
	  ActiveMQ connectionFactory  -->
 <bean id="connectionFactory"  
        class="org.apache.activemq.spring.ActiveMQConnectionFactory">  
        <property name="brokerURL" value="tcp://localhost:61616?wireFormat.maxInactivityDuration=0"/>  
        <property name="useAsyncSend" value="true"/>  
    </bean>  
  
    <bean id="topicListenConnectionFactory"  
        class="org.apache.activemq.spring.ActiveMQConnectionFactory">  
        <!-- <property name="brokerURL" value="tcp://localhost:61616"/>  -->
        <property name="brokerURL" value="tcp://localhost:61616?wireFormat.maxInactivityDuration=0"/>  
        <property name="clientID" value="com.jrmapp.clientA"/>  
         <property name="optimizeAcknowledge" value="true" /> <!-- 批量确认 -->
    </bean>  
    
     <bean id="topicListenConnectionFactoryB"  
        class="org.apache.activemq.spring.ActiveMQConnectionFactory">  
        <!-- <property name="brokerURL" value="tcp://localhost:61617"/>   -->
        <property name="brokerURL" value="tcp://localhost:61616?wireFormat.maxInactivityDuration=0"/>  
        <property name="clientID" value="com.jrmapp.clientB"/>  
         <property name="optimizeAcknowledge" value="true" />
    </bean>  
 <!--定义消息队列-->  
    <bean id="myQueue" class="org.apache.activemq.command.ActiveMQQueue">  
          <constructor-arg value="com.jrmapp.queue"/>  
    </bean>  
    <!--定义订阅主题-->  
    <bean id="myTopic"  class="org.apache.activemq.command.ActiveMQTopic">  
          <constructor-arg value="com.jrmapp.topic"/>  
    </bean>  

<bean id="jmsTemplate"
        class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory">
            <bean class="org.springframework.jms.connection.SingleConnectionFactory">
                <property name="targetConnectionFactory"
                    ref="connectionFactory" />
            </bean>
        </property>
        <!-- 
        <property name="defaultDestination"
            ref="myQueue" />
             -->
        <property name="messageConverter"
            ref="defaultMessageConverter" />
    </bean>
    <!-- 可以在JmsTemplate发送配置中,加上<property name=”timeToLive” value=”432000000”/>,5天的生命期,如果消息一直没有被处理,消息会被删除,
    但是表中会存在CONTAINER为queue://ActiveMQ.DLQ的记录.也就是说,相当于将过期的消息发给了一个ActiveMQ自定义的删除队列..  -->
    
<!-- 
<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="connectionFactory">
		</property>
		<property name="defaultDestination" ref="dest"></property>

		<property name="messageConverter" ref="defaultMessageConverter" />
	</bean>
	 -->
	<!-- 
	<bean id="messageSender" class="com.jrmapp.activemq.MessageSender">
		<property name="template" ref="jmsTemplate" />
	</bean>
	<bean id="messageReceiver" class="com.jrmapp.activemq.MessageReceiver">
		<property name="template" ref="jmsTemplate" />
	</bean>
	 -->

	<!--  Spring JmsTemplate config 
	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory">
		 lets wrap in a pool to avoid creating a connection per send 
			<bean class="org.springframework.jms.connection.SingleConnectionFactory">
				<property name="targetConnectionFactory" ref="jmsConnectionFactory" />
			</bean>
		</property>
		custom MessageConverter
		<property name="messageConverter" ref="defaultMessageConverter" />
	</bean>
-->
	<!-- converter  -->
	<bean id="defaultMessageConverter" class="com.jrmapp.activemq.DefaultMessageConverter" />

	<!-- POJO which send Message uses  Spring JmsTemplate -->
	<bean id="topicMessageProducer" class="com.jrmapp.activemq.TopicMessageProducer">
		<property name="template" ref="jmsTopicTemplate" />
		<property name="destination" ref="myTopic" />
	</bean>
	<bean id="queueMessageProducer" class="com.jrmapp.activemq.QueueMessageProducer">
		<property name="template" ref="jmsQueueTemplate" />
		<property name="destination" ref="myQueue" />
	</bean>

	<!--  Message Driven POJO (MDP) -->
    <!-- consumer1 for topic a -->
    <bean id="topicConsumerA" class="com.jrmapp.activemq.TopicConsumerA" />

    <!-- consumer2 for topic a -->
    <bean id="topicConsumerB" class="com.jrmapp.activemq.TopicConsumerB" />

    <!-- consumer for queue -->
    <bean id="queueConsumer" class="com.jrmapp.activemq.QueueConsumer" />

    <!-- Message Listener for  -->
	<bean id="topicListenerA" class="org.springframework.jms.listener.adapter.MessageListenerAdapter">
		<constructor-arg ref="topicConsumerA" />
		<!--  may be other method -->
		<property name="defaultListenerMethod" value="receive" />
		<!-- custom MessageConverter define -->
		<property name="messageConverter" ref="defaultMessageConverter" />
	</bean>
	<bean id="topicListenerB" class="org.springframework.jms.listener.adapter.MessageListenerAdapter">
		<constructor-arg ref="topicConsumerB" />
		<!--  may be other method -->
		<property name="defaultListenerMethod" value="receive" />
		<!-- custom MessageConverter define -->
		<property name="messageConverter" ref="defaultMessageConverter" />
	</bean>


    <bean id="queueListener" class="org.springframework.jms.listener.adapter.MessageListenerAdapter">
		<constructor-arg ref="queueConsumer" />
		<!--  may be other method -->
		<property name="defaultListenerMethod" value="receive" />
		<!-- custom MessageConverter define -->
		<property name="messageConverter" ref="defaultMessageConverter" />
	</bean>

    <!--  listener container，MDP无需实现接口	subscriptionDurable属性：设置监听是否是持久--> 
	<bean id="topicListenerContainerA" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="topicListenConnectionFactory" />
		<property name="pubSubDomain" value="true"/>  
          
        <property name="concurrentConsumers" value="1"/>  
        <property name="maxConcurrentConsumers" value="1"/>  
        <property name="receiveTimeout" value="10000"/>  
		<property name="destination" ref="myTopic" />
		<property name="messageListener" ref="topicListenerA" />
	     <property name="subscriptionDurable" value="true"/>  
        <property name="clientId" value="com.jrmapp.clientA"/>  
        <property name="durableSubscriptionName" value="com.jrmapp.clientA"/>  <!-- 持久订阅者名称  ACTIVEMQ_ACKS表的SUB_NAME字段 -->
         <property name="taskExecutor" ref="taskExecutor" />  
        <property name="cacheLevel" value="0"/>  
	</bean>
	
		<bean id="topicListenerContainerB" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="topicListenConnectionFactoryB" />
		<property name="pubSubDomain" value="true"/>  
          
        <property name="concurrentConsumers" value="1"/>  
        <property name="maxConcurrentConsumers" value="1"/>  
        <property name="receiveTimeout" value="10000"/>  
		<property name="destination" ref="myTopic" />
		<property name="messageListener" ref="topicListenerB" />
	     <property name="subscriptionDurable" value="true"/>  
        <property name="clientId" value="com.jrmapp.clientB"/>  
        <property name="durableSubscriptionName" value="com.jrmapp.clientB"/>  
         <property name="taskExecutor" ref="taskExecutor" />  
        <property name="cacheLevel" value="0"/>  
	</bean>

    
    <bean id="queueListenerContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="destination" ref="myQueue" />
		<property name="messageListener" ref="queueListener" />
		 <property name="concurrentConsumers" value="1"/>  
        <property name="maxConcurrentConsumers" value="1"/>  
        <property name="receiveTimeout" value="10000"/>  
        <property name="sessionAcknowledgeModeName" value="CLIENT_ACKNOWLEDGE"/>
        <property name="taskExecutor" ref="taskExecutor" />  
        <property name="cacheLevel" value="0"/>  
	</bean>

	 <!--DefaultMessageListenerContainer默认的线程池支持-->  
    <bean id="taskExecutor"   
        class="org.springframework.core.task.SimpleAsyncTaskExecutor"/>  
	<!--消息发送模板-->  
    <bean id="jmsQueueTemplate"  
        class="org.springframework.jms.core.JmsTemplate102">  
        <property name="connectionFactory" ref="connectionFactory"/>  
        <property name="messageConverter" ref="defaultMessageConverter"/>  
        <property name="sessionTransacted" value="true"/>  
        <property name="receiveTimeout" value="10000"/>  
    </bean>  
      
    <bean id="jmsTopicTemplate"  
        class="org.springframework.jms.core.JmsTemplate102">  
        <property name="connectionFactory" ref="connectionFactory"/>  
        <property name="messageConverter" ref="defaultMessageConverter"/>  
        <property name="pubSubDomain" value="true"/>  
        <property name="sessionTransacted" value="true"/>  
         <property name="explicitQosEnabled" value="true" />  
        <property name="receiveTimeout" value="10000"/>  
    </bean>  
</beans>